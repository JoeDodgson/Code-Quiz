DONE Two html files - one for scores and one for questions (index)
DONE Create a style.css and a script.js


Index.html:
DONE Navbar - contains nav link for 'take quiz' and 'scores'
DONE Properly style the navbar
DONE Intro (visible) - create the div and content
DONE Properly style the div and content
DONE 2- questions - 
DONE 3- Final score - visible after questions end
DONE 4- Score div - used to take the username


script.js
DONE Globally defined array of questions
DONE Globally defined HTML elements - timer, div element IDs, buttons
DONE Add a click event on the btn start - Calls function startQuiz
DONE startQuiz function - hides intro div, show questions div (loop through) and call getQuestions, call start timer function

DONE startTimer function: 
DONE setInterval, at 1000ms interval. 
DONE When time left = 0, stop function
DONE Else
DONE Display question
DONE Display answer

Add a click event on the choices:
Stop event bubbling
If the clicked text is exactly equal to the answer, then change text to green for 0.2 seconds and add one to the score
Else
Change text to red for 0.2 seconds and subtract 5 from the time
Either way, render the next question

Have the stop function triggered by the time reaching zero or reaching the last question number

Stop function:
Collect score
Hide questions
Show entry field for username

'submit score' - Btn click
Store score into local storage
Transfer you to scores.html page


scores.html
Display the scores from scores.js
Button to take you back to the quiz


scores.js
Check if there are any scores in the local storage and display into the scores container in scores.html

style.css
DONE Nice colour and fonts for everything
DONE Sort out issue with timer dropping onto new line
Separate styling into the CSS file

Nice to have:
-Randomize questions and choices - use shuffle
function shuffle(a) {
    var j, x, i;
    for (i = a.length - 1; i > 0; i--) {
        j = Math.floor(Math.random() * (i + 1));
        x = a[i];
        a[i] = a[j];
        a[j] = x;
    }
    return a;
}
-Have the timer turn red and make a sound in the last 10 seconds
-Sound a noise every time you select a correct or incorrect answer
